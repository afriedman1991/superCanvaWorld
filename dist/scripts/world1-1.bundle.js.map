{"version":3,"file":"./scripts/world1-1.bundle.js","mappings":"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","sources":["webpack://super_canva_world_3/./src/scripts/classes/Player.js","webpack://super_canva_world_3/./src/scripts/classes/Enemy.js","webpack://super_canva_world_3/./src/scripts/classes/Platform.js","webpack://super_canva_world_3/./src/scripts/classes/GenericObject.js","webpack://super_canva_world_3/./src/scripts/eventListeners.js","webpack://super_canva_world_3/./src/scripts/world1-1.js","webpack://super_canva_world_3/./src/assets/sprites/platformSmallTall.png","webpack://super_canva_world_3/./src/assets/sprites/platform.png","webpack://super_canva_world_3/./src/assets/sprites/background.png","webpack://super_canva_world_3/./src/assets/sprites/hills.png"],"sourcesContent":["class Player {\n\tconstructor(c) {\n\t\t// location on the canvas\n\t\tthis.position = {\n\t\t\tx: 100,\n\t\t\ty: 100\n\t\t}\n\t\t\n\t\t// physics variables\n\t\tthis.speed = 10;\n\t\tthis.velocity = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t\tthis.gravity = 1;\n\n\t\t// a boolean to check if the player is on the ground\n\t\tthis.isGrounded = false;\n\n\t\t// player dimensions and sides\n\t\tthis.width = 30;\n\t\tthis.height = 30;\n\t\tthis.sides = {\n\t\t\ttop: this.position.y,\n\t\t\tbottom: this.position.y + this.height,\n\t\t\tright: this.position.x + this.width,\n\t\t\tleft: this.position.x,\n\t\t}\n\n\t\t// canvas context\n\t\tthis.c = c;\n\t}\n\n\tdraw() {\n\t\t// draw a red square\n\t\tthis.c.fillStyle = 'black';\n\t\tthis.c.fillRect(this.position.x, this.position.y, this.width, this.height);\n\t}\n\n\tupdate() {\n\t\tthis.draw();\n\t\t// update player position\n\t\tthis.position.x += this.velocity.x;\n\t\tthis.position.y += this.velocity.y;\n\t\tthis.sides.top = this.position.y;\n\t\tthis.sides.bottom = this.position.y + this.height;\n\t\tthis.sides.right = this.position.x + this.width;\n\t\tthis.sides.left = this.position.x;\n\n\t\t// above bottom of canvas, apply gravity\n\t\tif (this.sides.bottom + this.velocity.y < canvas.height) {\n\t\t\tthis.velocity.y += this.gravity;\n\t\t\tthis.isGrounded = false;\n\t\t} else {\n\t\t\tthis.isGrounded = true;\n\t\t}\n\t}\n}\n\nexport default Player;\n","class Enemy {\n\tconstructor(c, { position, velocity, distance = {\n\t\tlimit: 50,\n\t\ttraveled: 0\n\t} }) {\n\t\t// location on the canvas\n\t\tthis.position = {\n\t\t\tx: position.x,\n\t\t\ty: position.y\n\t\t}\n\n\t\t// distance limit and traveled\n\t\tthis.distance = distance;\n\n\t\t// physics variables\n\t\tthis.velocity = {\n\t\t\tx: velocity.x,\n\t\t\ty: velocity.y\n\t\t};\n\n\t\t// enemy dimensions and sides\n\t\tthis.width = 30;\n\t\tthis.height = 30;\n\t\tthis.gravity = 1;\n\t\tthis.sides = {\n\t\t\ttop: this.position.y,\n\t\t\tbottom: this.position.y + this.height,\n\t\t\tright: this.position.x + this.width,\n\t\t\tleft: this.position.x,\n\t\t}\n\n\t\t// canvas context\n\t\tthis.c = c;\n\t}\n\t\n\tdraw() {\n\t\t// draw a red square\n\t\tthis.c.fillStyle = 'red';\n\t\tthis.c.fillRect(this.position.x, this.position.y, this.width, this.height);\n\t}\n\n\tupdate() {\n\t\tthis.draw();\n\n\t\t// update enemy position\n\t\tthis.position.x += this.velocity.x;\n\t\tthis.position.y += this.velocity.y;\n\n\t\t// update the location of the sides of this image\n\t\tthis.sides.top = this.position.y;\n\t\tthis.sides.bottom = this.position.y + this.height;\n\t\tthis.sides.right = this.position.x + this.width;\n\t\tthis.sides.left = this.position.x;\n\n\t\t// apply gravity\n\t\tif (this.position.y + this.height + this.velocity.y <= canvas.height) {\n\t\t\tthis.velocity.y += this.gravity;\n\t\t}\n\n\t\t// if the enemy has traveled the distance limit, change direction\n\t\tthis.distance.traveled += Math.abs(this.velocity.x);\n\n\t\tif (this.distance.traveled > this.distance.limit) {\n\t\t\tthis.velocity.x *= -1;\n\t\t\tthis.distance.traveled = 0;\n\t\t}\n\t}\n}\n\nexport default Enemy;\n","class Platform {\n\tconstructor(c, { x, y, image }) {\n\t\tthis.position = {\n\t\t\tx,\n\t\t\ty\n\t\t}\n\n\t\t// png image to apply to this object\n\t\tthis.image = image;\n\n\t\t// dimensions of the image\n\t\tthis.width = image.width;\n\t\tthis.height = image.height;\n\t\tthis.sides = {\n\t\t\ttop: this.position.y,\n\t\t\tright: this.position.x + this.width,\n\t\t\tleft: this.position.x\n\t\t}\n\n\t\t// canvas context\n\t\tthis.c = c;\n\t}\n\n\tdraw() {\n\t\tthis.c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\n\t}\n\n\tupdate() {\n\t\t// update the location of the sides of this image\n\t\tthis.sides.top = this.position.y;\n\t\tthis.sides.right = this.position.x + this.width;\n\t\tthis.sides.left = this.position.x;\n\t}\n}\n\nexport default Platform;\n","class GenericObject {\n\tconstructor(c, { x, y, image }) {\n\t\tthis.position = {\n\t\t\tx,\n\t\t\ty\n\t\t}\n\n\t\t// canvas context\n\t\tthis.c = c;\n\n\t\tthis.image = image;\n\t\tthis.width = image.width;\n\t\tthis.height = image.height;\n\t}\n\n\tdraw() {\n\t\tthis.c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\n\t}\n}\n\nexport default GenericObject;\n","function addKeyDownListener(player, keys) {\n\twindow.addEventListener('keydown', (e) => {\n\t  switch(e.key) {\n\t\tcase 'w':\n\t\t  // jump\n\t\t  if (player.velocity.y === 0 && player.isGrounded)\n\t\t\tplayer.velocity.y = -20;\n\t\t\tplayer.isGrounded = false;\n\t\t  break;\n\t\tcase 'a':\n\t\t  // move player to the left\n\t\t  keys.left.pressed = true;\n\t\t  break;\n\t\tcase 'd':\n\t\t  // move player to the right\n\t\t  keys.right.pressed = true;\n\t\t  break;\n\t  }\n\t});\n  }\n  \nfunction addKeyUpListener(keys) {\n\twindow.addEventListener('keyup', (e) => {\n\t  switch(e.key) {\n\t\tcase 'a':\n\t\t  keys.left.pressed = false;\n\t\t  break;\n\t\tcase 'd':\n\t\t  keys.right.pressed = false;\n\t\t  break;\n\t  }\n\t});\n  }\n  \n  export { addKeyDownListener, addKeyUpListener };\n","const canvas = document.querySelector('canvas');\nconst c = canvas.getContext('2d');\nimport Player from './classes/Player.js';\nimport Enemy from './classes/Enemy.js';\nimport Platform from './classes/Platform.js';\nimport GenericObject from './classes/GenericObject.js';\nimport { addKeyDownListener, addKeyUpListener } from './eventListeners.js';\nimport platform from '../assets/sprites/platform.png';\nimport hills from '../assets/sprites/hills.png';\nimport tallPlatform from '../assets/sprites/platformSmallTall.png';\nimport background from '../assets/sprites/background.png';\n\n// set canvas size\ncanvas.width = 1024;\ncanvas.height = 576;\n\n// create image for sprites\nconst createImage = (imageSrc) => {\n\tconst image = new Image();\n\timage.src = imageSrc;\n\treturn image;\n}\n\n// instantiate player object and goomba storage\nlet player = new Player(c);\nlet goombas = [];\n\n// platform and generic object storage\nlet platforms = [];\nlet genericObjects = [];\nlet initialPlatformLocation = -1;\n\n\n\n// key object, used to check if keys are pressed\nconst keys = {\n\tup: {\n\t\tpressed: false,\n\t},\n\tleft: {\n\t\tpressed: false,\n\t},\n\tright: {\n\t\tpressed: false,\n\t}\n}\n\nlet scrollOffset = 0;\n\n// platform collision detection\nconst isOnTopOfPlatform = ({ object, platform }) => {\n\treturn (object.velocity.y > 0 &&\n\t\tobject.sides.bottom <= platform.sides.top && // if the bottom of the object is above the top of the platform\n\t\tobject.sides.bottom + object.velocity.y >= platform.sides.top && // and the bottom of the object is still above the top of the platform after the next update\n\t\tobject.sides.right >= platform.sides.left && // and the right side of the object is to the right of the left side of the platform\n\t\tobject.sides.left <= platform.sides.right); // and the left side of the object is to the left of the right side of the platform\n}\n\n// collision detection for the sides of any two objects\nconst collisionTop = ({ object1, object2 }) => {\n\treturn (\n\t\tobject1.sides.bottom <= object2.sides.top &&\n\t\tobject1.sides.bottom + object1.velocity.y >= object2.sides.top &&\n\t\tobject1.sides.right >= object2.sides.left &&\n\t\tobject1.sides.left <= object2.sides.right\n\t);\n}\n\n// an initialisation function to set up the game and reset it upon death\nconst init = async() => {\n\tplayer = new Player(c);\n\tplayer.isGrounded = false;\n\tgoombas = [\n\t\tnew Enemy(c, { position: {\n\t\t\t\tx: 800,\n\t\t\t\ty: 100\n\t\t\t},\n\t\t\tvelocity: {\n\t\t\t\tx: -0.3,\n\t\t\t\ty: 0\n\t\t\t},\n\t\t\tdistance: {\n\t\t\t\tlimit: 200,\n\t\t\t\ttraveled: 0\n\t\t\t} }\n\t\t),\n\t\tnew Enemy(c, { position: {\n\t\t\t\tx: 1400,\n\t\t\t\ty: 100\n\t\t\t},\n\t\t\tvelocity: {\n\t\t\t\tx: -0.3,\n\t\t\t\ty: 0\n\t\t\t},\n\t\t\tdistance: {\n\t\t\t\tlimit: 50,\n\t\t\t\ttraveled: 0\n\t\t\t} }\n\t\t)\n\t];\n\n\t// location of the first platform on the x-axis\n\tinitialPlatformLocation = -1;\n\n\t// platform object instantiation\n\tlet tallPlatformImage = await createImage(tallPlatform);\n\ttallPlatformImage.onload = () => {\n\t\tplatforms.push(\n\t\t\tnew Platform(c, { x: tallPlatformImage.width * 10 - 3,\n\t\t\t\ty: canvas.height - tallPlatformImage.height - 100,\n\t\t\t\timage: tallPlatformImage})\n\t\t);\n\t}\n\n\t// floor\n\tlet platformImage = createImage(platform);\n\t// when the image is loaded, push the platform to the platforms array\n\tplatformImage.onload = () => {\n\t\t// Platform class takes in a canvas context, an object with x and y coordinates, and an image\n\t\tplatforms.push(new Platform(c, {\n\t\tx: initialPlatformLocation,\n\t\ty: canvas.height - platformImage.height,\n\t\timage: platformImage }),\n\t\tnew Platform(c, { x: platformImage.width - 3,\n\t\t\ty: canvas.height - platformImage.height,\n\t\t\timage: platformImage }),\n\t\tnew Platform(c, { x: platformImage.width * 2 + 100,\n\t\t\ty: canvas.height - platformImage.height,\n\t\t\timage: platformImage}),\n\t\tnew Platform(c, { x: platformImage.width * 3 + 300,\n\t\t\ty: canvas.height - platformImage.height,\n\t\t\timage: platformImage}),\n\t\tnew Platform(c, { x: platformImage.width * 4 + 298,\n\t\t\ty: canvas.height - platformImage.height,\n\t\t\timage: platformImage}),\n\t\t\tnew Platform(c, { x: platformImage.width * 6 + 100,\n\t\t\t\ty: canvas.height - platformImage.height,\n\t\t\t\timage: platformImage})\n\t\t);\n\t}\n\t\n\t// background\n\tlet backgroundImg = createImage(background);\n\tbackgroundImg.onload = () => genericObjects.push(new GenericObject(c, { x: -1, y: -1, image: backgroundImg }));\n\t\n\t// hills in the background\n\tlet hillsBackground = createImage(hills);\n\thillsBackground.onload = () => genericObjects.push(new GenericObject(c, { x: -1, y: 0, image: hillsBackground }));\n\n\t// reset scroll offset so the camera is back at the start\n\tscrollOffset = 0;\n\n\t// re-add event listeners when game resets, so the player can move and jump again\n\taddKeyDownListener(player, keys);\n\taddKeyUpListener(keys);\n}\n// simulate (not 'update') -> draw -> repeat\n// how to implememnt my own particle system in C.\nconst animate = () => {\n\twindow.requestAnimationFrame(animate);\n\tc.clearRect(0, 0, canvas.width, canvas.height);\n\n\t// draw all generic objects on the canvas\n\tgenericObjects.forEach(genericObject => {\n\t\tgenericObject.draw();\n\t});\n\n\t// draw all platforms on the canvas\n\tplatforms.forEach(platform => {\n\t\tplatform.draw();\n\t\tplatform.update();\n\t});\n\n\t// draw all goombas on the canvas, and update their position\n\tgoombas.forEach((goomba, index) => {\n\n\t\t// check if the player is colliding with the goomba\n\t\tif (collisionTop({ object1: player, object2: goomba })) {\n\t\t\tplayer.velocity.y -= 25; // make the player bounce\n\n\t\t\t// prevent unstyled content from flashing when removing goomba\n\t\t\t// setTimeout(() => {\n\t\t\t\tgoombas.splice(index, 1); // remove the goomba from the `goombas` array\n\t\t\t// }, 0);\n\t\t} else if (\n\t\t\tplayer.sides.right >= goomba.sides.left && // if the right side of the player collides with the left side of the goomba\n\t\t\tplayer.left <= goomba.sides.right && // if the left side of the player collides right the right side of the goomba\n\t\t\tplayer.sides.bottom >= goomba.sides.top // if the top of the player collides with the bottom of the goomba\n\t\t) {\n\t\t\tinit(); // reset the game if the player collides with the goomba\n\t\t}\n\t\tgoomba.update();\n\t});\n\n\t// draw update the player's position\n\tplayer.update();\n\n\tplayer.velocity.x = 0;\n\t// check if left or right keys are pressed, and where on the screen the player is\n\tif (keys.right.pressed && player.position.x < 400) {\n\t\tplayer.velocity.x = player.speed;\n\t} else if (keys.left.pressed && player.position.x > 100) {\n\t\tplayer.velocity.x = -player.speed;\n\t} else {\n\t\t// if the player is not pressing any keys, set player velocity to 0\n\t\tplayer.velocity.x = 0;\n\n\t\t// if the player is pressing the right or left keys, scroll the screen in the respective direction\n\t\tif (keys.right.pressed) {\n\t\t\tscrollOffset += player.speed;\n\t\t\tplatforms.forEach(platform => {\n\t\t\t\tplatform.position.x -= player.speed;\n\t\t\t});\n\t\t\tgenericObjects.forEach(genericObject => {\n\t\t\t\tgenericObject.position.x -= player.speed * .66;\n\t\t\t});\n\t\t\tgoombas.forEach(goomba => {\n\t\t\t\tgoomba.position.x -= player.speed;\n\t\t\t});\n\t\t} else if (keys.left.pressed) {\n\t\t\tscrollOffset -= player.speed;\n\t\t\tplatforms.forEach(platform => {\n\t\t\t\tplatform.position.x += player.speed;\n\t\t\t});\n\t\t\tgenericObjects.forEach(genericObject => {\n\t\t\t\tgenericObject.position.x += player.speed * .66;\n\t\t\t});\n\t\t\tgoombas.forEach(goomba => {\n\t\t\t\tgoomba.position.x += player.speed;\n\t\t\t});\n\t\t}\n\t}\n\n\t// platform collision detection\n\tplatforms.forEach(platform => {\n\t\tif (\n\t\t\tisOnTopOfPlatform({ object: player, platform })\n\t\t) {\n\t\t\t\tplayer.velocity.y = 0;\n\t\t\t\tplayer.isGrounded = true;\n\t\t}\n\n\t\tgoombas.forEach(goomba => {\n\t\t\tif (\n\t\t\t\tisOnTopOfPlatform({ object: goomba, platform })\n\t\t\t) {\n\t\t\t\tgoomba.velocity.y = 0;\n\t\t\t}\n\t\t});\n\t});\n\n\t// check if player has won\n\tif (scrollOffset > 2000) {\n\t\tconsole.log('you win!');\n\t}\n\t// check if player has lost\n\tif (player.position.y > canvas.height) {\n\t\tinit();\n\t}\n}\n\n// initialise the game\ninit();\nanimate();\n\naddKeyDownListener(player, keys);\naddKeyUpListener(keys);\n","export default \"/assets/sprites/platformSmallTall.png\";","export default \"/assets/sprites/platform.png\";","export default \"/assets/sprites/background.png\";","export default \"/assets/sprites/hills.png\";"],"names":["Player","c","_classCallCheck","this","position","x","y","speed","velocity","gravity","isGrounded","width","height","sides","top","bottom","right","left","key","value","fillStyle","fillRect","draw","canvas","Enemy","_ref","_ref$distance","distance","limit","traveled","Math","abs","Platform","image","drawImage","GenericObject","addKeyDownListener","player","keys","window","addEventListener","e","pressed","addKeyUpListener","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","document","querySelector","getContext","createImage","imageSrc","Image","src","goombas","platforms","genericObjects","initialPlatformLocation","up","scrollOffset","isOnTopOfPlatform","platform","init","_ref3","_callee","tallPlatformImage","platformImage","backgroundImg","hillsBackground","_context","onload","args","arguments","apply","animate","requestAnimationFrame","clearRect","genericObject","update","goomba","index","_ref2","object1","object2","splice","console","log"],"sourceRoot":""}